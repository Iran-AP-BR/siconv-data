schema {
    query: Query
}

input PageSpecs {
    page: Int
    page_length: Int
}

"""
Each field in this filter especification accepts the following commands (not case sensitive): 
1. __eq$__: _equal to_.
> Ex: UF:"eq$macapa"
>     eq$em execução
2. __gt$__: _greater than_
3. __lt$__: _lesser than_
4. __ct$__: _contains a string_
5. __bt$__: _is between two values_. 
> Ex: DATA:"bt$2020-10-04|2020-12-01"
6. __in$__: _is in a pipe-separated list of values_.
>Ex: DATA:"in$2020-05-03|2020-03-01|2020-04-30"
7. __sw$ (starts with)__
8. __s$ (ends with)__

To negate the commands, use exclamation mark (!).
> Ex: !eq$, !gt$ ...

Commands may be combined by using logical operators && (and) and || (or), and parentheses as well, like this: 
> Ex: DATA:"(bt$2009-02-01|2009-04-30 && !eq$2009-04-24) || gt$2020-01-01"

"""
input FilterEmendas {
    NR_EMENDA: ID,
    NOME_PARLAMENTAR: String,
    TIPO_PARLAMENTAR: String
}

"""
Each field in this filter especification accepts the following commands (not case sensitive): 
1. __eq$__: _equal to_.
> Ex: UF:"eq$macapa"
>     eq$em execução
2. __gt$__: _greater than_
3. __lt$__: _lesser than_
4. __ct$__: _contains a string_
5. __bt$__: _is between two values_. 
> Ex: DATA:"bt$2020-10-04|2020-12-01"
6. __in$__: _is in a pipe-separated list of values_.
>Ex: DATA:"in$2020-05-03|2020-03-01|2020-04-30"
7. __sw$ (starts with)__
8. __s$ (ends with)__

To negate the commands, use exclamation mark (!).
> Ex: !eq$, !gt$ ...

Commands may be combined by using logical operators && (and) and || (or), and parentheses as well, like this: 
> Ex: DATA:"(bt$2009-02-01|2009-04-30 && !eq$2009-04-24) || gt$2020-01-01"

"""
input FilterProponentes {
    IDENTIF_PROPONENTE: ID,
    NM_PROPONENTE: String,
    UF_PROPONENTE: String,
    MUNIC_PROPONENTE: String,
    COD_MUNIC_IBGE: String
}

"""
Each field in this filter especification accepts the following commands (not case sensitive): 
1. __eq$__: _equal to_.
> Ex: UF:"eq$macapa"
>     eq$em execução
2. __gt$__: _greater than_
3. __lt$__: _lesser than_
4. __ct$__: _contains a string_
5. __bt$__: _is between two values_. 
> Ex: DATA:"bt$2020-10-04|2020-12-01"
6. __in$__: _is in a pipe-separated list of values_.
>Ex: DATA:"in$2020-05-03|2020-03-01|2020-04-30"
7. __sw$ (starts with)__
8. __s$ (ends with)__

To negate the commands, use exclamation mark (!).
> Ex: !eq$, !gt$ ...

Commands may be combined by using logical operators && (and) and || (or), and parentheses as well, like this: 
> Ex: DATA:"(bt$2009-02-01|2009-04-30 && !eq$2009-04-24) || gt$2020-01-01"

"""
input FilterMovimento {
    NR_CONVENIO: ID,
    DATA: String,
    VALOR: String,
    TIPO: String,
    IDENTIF_FORNECEDOR: String,
    NOME_FORNECEDOR: String
}

"""
Each field in this filter especification accepts the following commands (not case sensitive): 
1. __eq$__: _equal to_.
> Ex: UF:"eq$macapa"
>     eq$em execução
2. __gt$__: _greater than_
3. __lt$__: _lesser than_
4. __ct$__: _contains a string_
5. __bt$__: _is between two values_. 
> Ex: DATA:"bt$2020-10-04|2020-12-01"
6. __in$__: _is in a pipe-separated list of values_.
>Ex: DATA:"in$2020-05-03|2020-03-01|2020-04-30"
7. __sw$ (starts with)__
8. __s$ (ends with)__

To negate the commands, use exclamation mark (!).
> Ex: !eq$, !gt$ ...

Commands may be combined by using logical operators && (and) and || (or), and parentheses as well, like this: 
> Ex: DATA:"(bt$2009-02-01|2009-04-30 && !eq$2009-04-24) || gt$2020-01-01"

"""
input FilterConvenios {
    NR_CONVENIO: ID, 
    DIA_ASSIN_CONV: String,
    SIT_CONVENIO: String,
    INSTRUMENTO_ATIVO: String,
    DIA_PUBL_CONV: String,
    DIA_INIC_VIGENC_CONV: String,
    DIA_FIM_VIGENC_CONV: String,
    DIA_LIMITE_PREST_CONTAS: String,
    VL_GLOBAL_CONV: String,
    VL_REPASSE_CONV: String,
    VL_CONTRAPARTIDA_CONV: String,
    COD_ORGAO_SUP: String,
    DESC_ORGAO_SUP: String,
    NATUREZA_JURIDICA: String,
    COD_ORGAO: String,
    DESC_ORGAO: String,
    MODALIDADE: String,
    IDENTIF_PROPONENTE: String,
    OBJETO_PROPOSTA: String
}

type Pagination {
    page: Int!
    page_length: Int!
    page_count: Int!
    items_count: Int!
}

type Movimento {
    NR_CONVENIO: String!
    DATA: String
    VALOR: String
    TIPO: String
    IDENTIF_FORNECEDOR: String
    NOME_FORNECEDOR: String
    CONVENIO: Convenio
}

type Proponente {
    IDENTIF_PROPONENTE: ID!
    NM_PROPONENTE: String
    UF_PROPONENTE: String
    MUNIC_PROPONENTE: String
    COD_MUNIC_IBGE: String
    CONVENIOS(page_specs: PageSpecs): ConveniosResult
}

type Convenio {
    NR_CONVENIO: ID!
    DIA_ASSIN_CONV: String
    SIT_CONVENIO: String
    INSTRUMENTO_ATIVO: String
    DIA_PUBL_CONV: String
    DIA_INIC_VIGENC_CONV: String
    DIA_FIM_VIGENC_CONV: String
    DIA_LIMITE_PREST_CONTAS: String
    VL_GLOBAL_CONV: String
    VL_REPASSE_CONV: String
    VL_CONTRAPARTIDA_CONV: String
    COD_ORGAO_SUP: String
    DESC_ORGAO_SUP: String
    NATUREZA_JURIDICA: String
    COD_ORGAO: String
    DESC_ORGAO: String
    MODALIDADE: String
    IDENTIF_PROPONENTE: String
    OBJETO_PROPOSTA: String
    EMENDAS(page_specs: PageSpecs): EmendasResult
    PROPONENTE: Proponente
    MOVIMENTO(page_specs: PageSpecs): MovimentoResult
}

type Emenda {
    NR_EMENDA: ID!
    NOME_PARLAMENTAR: String
    TIPO_PARLAMENTAR: String
    CONVENIOS(page_specs: PageSpecs): ConveniosResult
}

type ConveniosResult {
    pagination: Pagination
    errors: [String]
    convenios: [Convenio]
}

type EmendasResult {
    pagination: Pagination
    errors: [String]
    emendas: [Emenda]
}

type ProponentesResult {
    pagination: Pagination
    errors: [String]
    proponentes: [Proponente]
}

type MovimentoResult {
    pagination: Pagination
    errors: [String]
    movimento: [Movimento]
}

type Query {
    buscarEmendas(
        page_specs: PageSpecs,
        filters: FilterEmendas
        ): EmendasResult!

    buscarProponentes(
        page_specs: PageSpecs,
        filters: FilterProponentes
        ): ProponentesResult!

    buscarMovimento(
        page_specs: PageSpecs,
        filters: FilterMovimento
        ): MovimentoResult!

    buscarConvenios(
        page_specs: PageSpecs,
        filters: FilterConvenios
        ): ConveniosResult!
}
