"""
Defines the minimum and maximum limits of a range of values.
"""
input FloatRange {
    min: Float
    max: Float
}

"""
Defines the minimum and maximum limits of a range of values.
"""
input IntRange {
    min: Int
    max: Int
}

"""
Defines the minimum and maximum limits of a range of values.
"""
input StringRange {
    min: String
    max: String
}

"""
Defines the minimum and maximum limits of a range of values.
"""
input DatetimeRange {
    min: Datetime
    max: Datetime
}

"""
Defines a set of filtering commands to be applied to field of Float type.
The commands may be:

1. __eq__: _equal to_
2. __diff__: _different_
3. __in__: _in list_.
4. __bt__: _between two values_. 
5. __gt__: _greater than_
6. __gte__: _greater than or equal to_
7. __lt__: _less than_
8. __lte__: _less than or equal to_
"""
input FloatFilters {
    eq: Float
    diff: Float
    in: [Float!]
    bt: FloatRange
    gt: Float
    gte: Float
    lt: Float
    lte: Float
} 

"""
Defines a set of filtering commands to be applied to field of Int type.
The commands may be:

1. __eq__: _equal to_
2. __diff__: _different_
3. __in__: _in list_.
4. __bt__: _between two values_. 
5. __gt__: _greater than_
6. __gte__: _greater than or equal to_
7. __lt__: _less than_
8. __lte__: _less than or equal to_
"""
input IntFilters {
    eq: Int
    diff: Int
    in: [Int!]
    bt: IntRange
    gt: Int
    gte: Int
    lt: Int
    lte: Int
} 

"""
Defines a set of filtering commands to be applied to field of Datetime type.
The commands may be:

1. __eq__: _equal to_
2. __diff__: _different_
3. __in__: _in list_.
4. __bt__: _between two values_. 
5. __gt__: _greater than_
6. __gte__: _greater than or equal to_
7. __lt__: _less than_
8. __lte__: _less than or equal to_
"""
input DateFilters {
    eq: Datetime
    diff: Datetime
    in: [Datetime!]
    bt: DatetimeRange
    gt: Datetime
    gte: Datetime
    lt: Datetime
    lte: Datetime
} 

"""
Defines a set of filtering commands to be applied to field of String type.
The commands may be:

1. __eq__: _equal to_
2. __diff__: _different_
3. __in__: _in list_.
4. __bt__: _between two values_. 
5. __gt__: _greater than_
6. __gte__: _greater than or equal to_
7. __lt__: _less than_
8. __lte__: _less than or equal to_
9. __ct__: _contains_
10. __ctx__: _contains exact (whole word)_
11. __sw__: _starts with_
12. __swx__: _starts with exact (whole word)_
13. __ew__: _ends with_
14. __ewx__: _ends with exact (whole word)_
"""
input StringFilters {
    eq: String
    diff: String
    in: [String!]
    bt: StringRange
    gt: String
    gte: String
    lt: String
    lte: String
    ct: String
    ctx: String
    ew: String
    ewx: String
    sw: String
    swx: String
} 


"""
Defines a set of filtering commands to be applied to field of Regiao type.
The commands may be:

1. __eq__: _equal to_
2. __diff__: _different_
3. __in__: _in list_.
"""
input RegiaoFilters {
    eq: Regiao
    diff: Regiao
    in: [Regiao!]
} 

"""
Defines a set of filtering commands to be applied to field of RegiaoAbreviada type.
The commands may be:

1. __eq__: _equal to_
2. __diff__: _different_
3. __in__: _in list_.
"""
input RegiaoAbreviadaFilters {
    eq: RegiaoAbreviada
    diff: RegiaoAbreviada
    in: [RegiaoAbreviada!]
} 

"""
Defines a set of filtering commands to be applied to field of YesNo type.
The commands may be:

1. __eq__: _equal to_
2. __diff__: _different_
"""
input YesNoFilters {
    eq: YesNo
    diff: YesNo
} 

"""
Pagination specifications. Use to set the number of items in a page (page_length) and to select the page to be returned.
"""
input PageSpecs {
    page: Int
    page_length: Int
}

"""
Defines a set of fields to be used in filtering. It includes special words (OR, AND, NOT) 
whose can be used to connect, aggregate or negate filter parts:
"""
input FilterFornecedores {
    IDENTIF_FORNECEDOR: StringFilters
    NOME_FORNECEDOR: StringFilters

    OR: [FilterFornecedores!]
    AND: [FilterFornecedores!]
    NOT: FilterFornecedores
}

"""
Defines a set of fields to be used in filtering. It includes special words (OR, AND, NOT) 
whose can be used to connect, aggregate or negate filter parts:
"""
input FilterMunicipios {
    CODIGO_IBGE: IntFilters
    NOME_MUNICIPIO: StringFilters
    UF: StringFilters
    REGIAO: RegiaoFilters
    REGIAO_ABREVIADA: RegiaoAbreviadaFilters
    LATITUDE: FloatFilters
    LONGITUDE: FloatFilters
    CAPITAL: StringFilters

    OR: [FilterMunicipios!]
    AND: [FilterMunicipios!]
    NOT: FilterMunicipios
}

"""
Defines a set of fields to be used in filtering. It includes special words (OR, AND, NOT) 
whose can be used to connect, aggregate or negate filter parts:
"""
input FilterEstados {
    SIGLA: StringFilters
    NOME: StringFilters

    OR: [FilterEstados!]
    AND: [FilterEstados!]
    NOT: FilterEstados
}

"""
Defines a set of fields to be used in filtering. It includes special words (OR, AND, NOT) 
whose can be used to connect, aggregate or negate filter parts:
"""
input FilterEmendas {
    NR_EMENDA: FloatFilters,
    NOME_PARLAMENTAR: StringFilters
    TIPO_PARLAMENTAR: StringFilters
    VALOR_EMENDA: FloatFilters

    OR: [FilterEmendas!]
    AND: [FilterEmendas!]
    NOT: FilterEmendas
}

"""
Defines a set of fields to be used in filtering. It includes special words (OR, AND, NOT) 
whose can be used to connect, aggregate or negate filter parts:
"""
input FilterParlamentares {
    NOME_PARLAMENTAR: StringFilters
    TIPO_PARLAMENTAR: StringFilters

    OR: [FilterParlamentares!]
    AND: [FilterParlamentares!]
    NOT: FilterParlamentares
}

"""
Defines a set of fields to be used in filtering. It includes special words (OR, AND, NOT) 
whose can be used to connect, aggregate or negate filter parts:
"""
input FilterProponentes {
    IDENTIFICACAO: StringFilters
    NOME_PROPONENTE: StringFilters
    CODIGO_IBGE: IntFilters

    OR: [FilterProponentes!]
    AND: [FilterProponentes!]
    NOT: FilterProponentes
}

"""
Defines a set of fields to be used in filtering. It includes special words (OR, AND, NOT) 
whose can be used to connect, aggregate or negate filter parts:
"""
input FilterMovimento {
    MOV_ID: IntFilters
    NR_CONVENIO: IntFilters
    DATA: DateFilters
    VALOR: FloatFilters
    TIPO: StringFilters

    OR: [FilterMovimento!]
    AND: [FilterMovimento!]
    NOT: FilterMovimento
}

"""
Defines a set of fields to be used in filtering. It includes special words (OR, AND, NOT) 
whose can be used to connect, aggregate or negate filter parts:
"""
input FilterConvenios {
    NR_CONVENIO: IntFilters
    DIA_ASSIN_CONV: DateFilters
    SIT_CONVENIO: StringFilters
    INSTRUMENTO_ATIVO: YesNoFilters
    DIA_PUBL_CONV: DateFilters
    DIA_INIC_VIGENC_CONV: DateFilters
    DIA_FIM_VIGENC_CONV: DateFilters
    DIA_LIMITE_PREST_CONTAS: DateFilters
    VL_GLOBAL_CONV: FloatFilters
    VL_REPASSE_CONV: FloatFilters
    VL_CONTRAPARTIDA_CONV: FloatFilters
    COD_ORGAO_SUP: StringFilters
    DESC_ORGAO_SUP: StringFilters
    NATUREZA_JURIDICA: StringFilters
    COD_ORGAO: StringFilters
    DESC_ORGAO: StringFilters
    MODALIDADE: StringFilters
    IDENTIF_PROPONENTE: StringFilters
    OBJETO_PROPOSTA: StringFilters
    VALOR_REPASSE_EMENDA: FloatFilters
    COM_EMENDAS: YesNoFilters
    INSUCESSO: FloatFilters

    OR: [FilterConvenios!]
    AND: [FilterConvenios!]
    NOT: FilterConvenios
}

"""
Defines a set of fields to be used in filtering. It includes special words (OR, AND, NOT) 
whose can be used to connect, aggregate or negate filter parts:
"""
input FilterLicitacoes {
    NR_CONVENIO: IntFilters
    MODALIDADE_COMPRA: StringFilters
    TIPO_LICITACAO: StringFilters
    FORMA_LICITACAO: StringFilters
    REGISTRO_PRECOS: YesNoFilters
    LICITACAO_INTERNACIONAL: YesNoFilters
    STATUS_LICITACAO: StringFilters
    VALOR_LICITACAO: FloatFilters

    OR: [FilterLicitacoes!]
    AND: [FilterLicitacoes!]
    NOT: FilterLicitacoes
}

"""
Sort parameters. Use to set the fields by which the records will be sorted and if the order will be ascending or descending.
The "fields" parameter must be a single name, or a list of names, of existing fields. The "order" parameter must be "ASC", 
for ascending, or "DESC", for descending, or a list of that values. The length of both fields and order must be the same.
"""
input SortFornecedores {
    fields: [FieldsFornecedores]
    order: [SortOrder!] = []
}

"""
Sort parameters. Use to set the fields by which the records will be sorted and if the order will be ascending or descending.
The "fields" parameter must be a single name, or a list of names, of existing fields. The "order" parameter must be "ASC", 
for ascending, or "DESC", for descending, or a list of that values. The length of both fields and order must be the same.
"""
input SortMunicipios {
    fields: [FieldsMunicipios]
    order: [SortOrder!] = []
}

"""
Sort parameters. Use to set the fields by which the records will be sorted and if the order will be ascending or descending.
The "fields" parameter must be a single name, or a list of names, of existing fields. The "order" parameter must be "ASC", 
for ascending, or "DESC", for descending, or a list of that values. The length of both fields and order must be the same.
"""
input SortEstados {
    fields: [FieldsEstados]
    order: [SortOrder!] = []
}

"""
Sort parameters. Use to set the fields by which the records will be sorted and if the order will be ascending or descending.
The "fields" parameter must be a single name, or a list of names, of existing fields. The "order" parameter must be "ASC", 
for ascending, or "DESC", for descending, or a list of that values. The length of both fields and order must be the same.
"""
input SortEmendas {
    fields: [FieldsEmendas]
    order: [SortOrder!] = []
}

"""
Sort parameters. Use to set the fields by which the records will be sorted and if the order will be ascending or descending.
The "fields" parameter must be a single name, or a list of names, of existing fields. The "order" parameter must be "ASC", 
for ascending, or "DESC", for descending, or a list of that values. The length of both fields and order must be the same.
"""
input SortParlamentares {
    fields: [FieldsParlamentares]
    order: [SortOrder!] = []
}

"""
Sort parameters. Use to set the fields by which the records will be sorted and if the order will be ascending or descending.
The "fields" parameter must be a single name, or a list of names, of existing fields. The "order" parameter must be "ASC", 
for ascending, or "DESC", for descending, or a list of that values. The length of both fields and order must be the same.
"""
input SortProponentes {
    fields: [FieldsProponentes]
    order: [SortOrder!] = []
}

"""
Sort parameters. Use to set the fields by which the records will be sorted and if the order will be ascending or descending.
The "fields" parameter must be a single name, or a list of names, of existing fields. The "order" parameter must be "ASC", 
for ascending, or "DESC", for descending, or a list of that values. The length of both fields and order must be the same.
"""
input SortMovimento {
    fields: [FieldsMovimento]
    order: [SortOrder!] = []
}

"""
Sort parameters. Use to set the fields by which the records will be sorted and if the order will be ascending or descending.
The "fields" parameter must be a single name, or a list of names, of existing fields. The "order" parameter must be "ASC", 
for ascending, or "DESC", for descending, or a list of that values. The length of both fields and order must be the same.
"""
input SortConvenios {
    fields: [FieldsConvenios]
    order: [SortOrder!] = []
}

"""
Sort parameters. Use to set the fields by which the records will be sorted and if the order will be ascending or descending.
The "fields" parameter must be a single name, or a list of names, of existing fields. The "order" parameter must be "ASC", 
for ascending, or "DESC", for descending, or a list of that values. The length of both fields and order must be the same.
"""
input SortLicitacoes {
    fields: [FieldsLicitacoes]
    order: [SortOrder!] = []
}